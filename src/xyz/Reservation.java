/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package xyz;

import impl.BReservationQueue;
import java.text.SimpleDateFormat;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import src.BanquetHall;
import net.sourceforge.jdatepicker.JDatePicker;
import java.util.ArrayList;
import java.util.Collections;

/**
 *
 * @author Sithumini
 */
public final class Reservation extends javax.swing.JFrame {
//    Connection conn=null;
//    PreparedStatement pst=null;
//    ResultSet rs=null;
//    DefaultTableModel model;

    public BReservationQueue banquetQueue;
    public BReservationQueue waitingListQueue;


    /**
     * Creates new form welcome
     */
    public Reservation() {
        initComponents();
    }

    private void init() {
        banquetQueue = new BReservationQueue(100);
        waitingListQueue = new BReservationQueue(100);
        
        
//         enqueue (add) data to the queue - initizial 
        BanquetHall b1 = new BanquetHall(1, "bh1", "colombo", 100, "2019-10-01", 1000, 2000, 3000);
        banquetQueue.enqueue(b1);
        BanquetHall b2 = new BanquetHall(2, "bh2", "colombo", 200, "2019-09-01", 2000, 3000, 4000);
        banquetQueue.enqueue(b2);
        BanquetHall b3 = new BanquetHall(3, "bh3", "kandy", 300, "2019-08-01", 3000, 4000, 5000);
        banquetQueue.enqueue(b3);
        BanquetHall b4 = new BanquetHall(4, "bh4", "Jaffna", 300, "2019-08-01", 3000, 4000, 5000);
        banquetQueue.enqueue(b4);


        

    }

    public Reservation(String pars) {
        initComponents();

        jLabel5.setText(pars);
        init();
        updateTable();

    }

    public void updateTable() {
        List<BanquetHall> list = banquetQueue.getAllBanquets();
        
        DefaultTableModel model = (DefaultTableModel) t_reservation.getModel();
        model.setRowCount(0);

        Object coloumnData[] = new Object[8];
        for (int i = 0; i < list.size(); i++) {
            BanquetHall get = list.get(i);

            if (get == null) {
                // ignore
            } else {
                coloumnData[0] = list.get(i).id;
                coloumnData[1] = list.get(i).name;
                coloumnData[2] = list.get(i).location;
                coloumnData[3] = list.get(i).max_guests;
                coloumnData[4] = list.get(i).date;
                coloumnData[5] = list.get(i).menu_1;
                coloumnData[6] = list.get(i).menu_2;
                coloumnData[7] = list.get(i).menu_3;
                model.addRow(coloumnData);
            }

        }
    }
    
    public void updateTableWaiting() {
        List<BanquetHall> list = waitingListQueue.getAllBanquets();
        
        DefaultTableModel model = (DefaultTableModel) t_reservation2.getModel();
        model.setRowCount(0);

        Object coloumnData[] = new Object[8];
        for (int i = 0; i < list.size(); i++) {
            BanquetHall get = list.get(i);

            if (get == null) {
                // ignore
            } else {
                coloumnData[0] = list.get(i).id;
                coloumnData[1] = list.get(i).name;
                coloumnData[2] = list.get(i).location;
                coloumnData[3] = list.get(i).max_guests;
                coloumnData[4] = list.get(i).date;
                coloumnData[5] = list.get(i).menu_1;
                coloumnData[6] = list.get(i).menu_2;
                coloumnData[7] = list.get(i).menu_3;
                model.addRow(coloumnData);
            }

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jDateComponentFactory1 = new net.sourceforge.jdatepicker.JDateComponentFactory();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        location = new javax.swing.JTextField();
        number_of_guests = new javax.swing.JTextField();
        Clear = new javax.swing.JButton();
        date = new com.toedter.calendar.JDateChooser();
        jScrollPane2 = new javax.swing.JScrollPane();
        t_reservation = new javax.swing.JTable();
        Reserve_Button = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        search = new javax.swing.JButton();
        remove_reservation = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        t_reservation2 = new javax.swing.JTable();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTable2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                formFocusGained(evt);
            }
        });

        jLabel1.setText("Welcome to XYZ hotel chain!");

        jLabel2.setText("Location");

        jLabel3.setText("Date");

        jLabel4.setText("Number of guests");

        location.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                locationActionPerformed(evt);
            }
        });
        location.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                locationKeyReleased(evt);
            }
        });

        number_of_guests.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                number_of_guestsActionPerformed(evt);
            }
        });
        number_of_guests.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                number_of_guestsKeyReleased(evt);
            }
        });

        Clear.setText("Clear");
        Clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearActionPerformed(evt);
            }
        });

        date.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                dateInputMethodTextChanged(evt);
            }
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
        });
        date.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                datePropertyChange(evt);
            }
        });
        date.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                dateKeyReleased(evt);
            }
        });

        t_reservation.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "name", "location", "max_guests", "date", "menu_1", "menu_2", "menu_3"
            }
        ));
        t_reservation.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                t_reservationMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(t_reservation);

        Reserve_Button.setText("Reserve");
        Reserve_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Reserve_ButtonActionPerformed(evt);
            }
        });

        jLabel5.setBackground(new java.awt.Color(204, 153, 255));
        jLabel5.setText("Username");

        jLabel6.setText("User:");

        search.setText("Search");
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });

        remove_reservation.setText("Remove reservation");
        remove_reservation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                remove_reservationActionPerformed(evt);
            }
        });

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jLabel7.setText("Location");

        jLabel8.setText("Date");

        jLabel9.setText("Number of guests");

        t_reservation2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "name", "location", "max_guests", "date", "menu_1", "menu_2", "menu_3"
            }
        ));
        t_reservation2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                t_reservation2MouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(t_reservation2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(74, 74, 74)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2))
                                .addGap(29, 29, 29))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(date, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(location)
                            .addComponent(number_of_guests)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Clear)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(search))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Reserve_Button)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(remove_reservation)
                                .addGap(24, 24, 24)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addGap(69, 69, 69)
                                        .addComponent(jLabel8))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(16, 16, 16)
                                        .addComponent(jLabel9))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(178, 178, 178)
                        .addComponent(jLabel1)
                        .addGap(71, 71, 71)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(168, 511, Short.MAX_VALUE))
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jScrollPane4)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(location, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(number_of_guests, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Clear)
                    .addComponent(search))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Reserve_Button)
                    .addComponent(remove_reservation)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(135, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearActionPerformed
        // TODO add your handling code here:

        updateTable();
        location.setText("");
        date.setDate(null);
        number_of_guests.setText("");


    }//GEN-LAST:event_ClearActionPerformed

    private void locationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_locationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_locationActionPerformed

    private void t_reservationMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_t_reservationMouseClicked
        // TODO add your handling code here:

     //get the value of id column of selected row of the table
        int index = t_reservation.getSelectedRow();

        TableModel model = t_reservation.getModel();
//        int value1 = Integer.parseInt(model.getValueAt(index, 1).toString());

//        String location1= Integer.toString(location); 

//        BanquetHall selectedBanquet =  banquetQueue.getBanquetsByIndex(index);
        
        String location = (t_reservation.getModel().getValueAt(index, 2).toString());
        jTextField1.setText(location);

        String date = (t_reservation.getModel().getValueAt(index, 4).toString());
        jTextField2.setText(date);

        String number_of_guests = (t_reservation.getModel().getValueAt(index, 3).toString());
        jTextField3.setText(number_of_guests);
        
//        JOptionPane.showMessageDialog(null, value1);
//        int input = JOptionPane.showConfirmDialog(null, "Are you sure you want to reserve?");
//        // 0=yes
//        System.out.println(input);
        
       int input = JOptionPane.showConfirmDialog(null,"Are you sure you want to reserve?", "Yes", JOptionPane.DEFAULT_OPTION);
        // 0=ok
        System.out.println(input);
        
        int row = t_reservation.getSelectedRow();
        BanquetHall banquetsByIndex = banquetQueue.getBanquetsByIndex(row);
        waitingListQueue.enqueue(banquetsByIndex);
        banquetQueue.removeByIndex(row);
        updateTableWaiting();
        updateTable();
        
        
//      banquetQueue.enqueue(selectedBanquet);
//        updateTable();

    }//GEN-LAST:event_t_reservationMouseClicked

    private void Reserve_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Reserve_ButtonActionPerformed
        // TODO add your handling code here:
//        
//        TableModel model1=t_reservation.getModel();
//        int indexes =t_reservation.getSelectedRow();
//        
//        Object[] row=new Object[4];
//        reservation_details rd=new reservation_details();

//        DefaultTableModel model2 = (DefaultTableModel)rd.jTable1.getModel();
        String username = jLabel5.getText();
        JOptionPane.showMessageDialog(null, username);

    }//GEN-LAST:event_Reserve_ButtonActionPerformed

    private void formFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusGained
        // TODO add your handling code here:


    }//GEN-LAST:event_formFocusGained

    private void locationKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_locationKeyReleased
        // TODO add your handling code here:
//        System.out.println(location.getText());
        String txt = location.getText();
//       ArrayList<Banquethall> list = ListBanquetHall();       
//               ArrayList<Banquethall> newList = new ArrayList<Banquethall>();
//
//       
// for (int counter = 0; counter < list.size(); counter++) { 		      
//         boolean isMatched = list.get(counter).location.equalsIgnoreCase(txt);
//         
//         if(isMatched){
//             newList.add(list.get(counter));
//         }
//      }   	
//       updateTable(newList);

//        arraylistsearchlocation();
//        locationFilter(txt);

    }//GEN-LAST:event_locationKeyReleased

    private void dateKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dateKeyReleased
        // TODO add your handling code here:

    }//GEN-LAST:event_dateKeyReleased

    private void number_of_guestsKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_number_of_guestsKeyReleased
        // TODO add your handling code here:
//        guestnumberfilter();

    }//GEN-LAST:event_number_of_guestsKeyReleased

    private void number_of_guestsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_number_of_guestsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_number_of_guestsActionPerformed

    private void dateInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_dateInputMethodTextChanged

    }//GEN-LAST:event_dateInputMethodTextChanged

    private void datePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_datePropertyChange
        // TODO add your handling code here:
        if (date.getDate() != null) {
            System.out.println(date.getDate());
            SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
            String strDate = formatter.format(date.getDate());
//        String res_date=sdft.format(date.getDate());
//        dateFilter(strDate);
        }

    }//GEN-LAST:event_datePropertyChange

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
        // TODO add your handling code here:


    }//GEN-LAST:event_searchActionPerformed

    private void remove_reservationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_remove_reservationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_remove_reservationActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:

//        BanquetHall selectedBanquet =  banquetQueue.getBanquetsByIndex(index);
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void t_reservation2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_t_reservation2MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_t_reservation2MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Reservation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Reservation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Reservation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Reservation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Reservation().setVisible(true);
//                login lgn=new login();

            }
        });

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Clear;
    private javax.swing.JButton Reserve_Button;
    private com.toedter.calendar.JDateChooser date;
    private net.sourceforge.jdatepicker.JDateComponentFactory jDateComponentFactory1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    public javax.swing.JLabel jLabel5;
    public javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField location;
    private javax.swing.JTextField number_of_guests;
    private javax.swing.JButton remove_reservation;
    private javax.swing.JButton search;
    public javax.swing.JTable t_reservation;
    public javax.swing.JTable t_reservation2;
    // End of variables declaration//GEN-END:variables

    private static class DateChooser {

        public DateChooser() {
        }
    }
}
